# See https://wiki.hyprland.org/Configuring/Binds/
#!
##! User
bind = Ctrl+Super, Slash, exec, xdg-open ~/.config/illogical-impulse/config.json # Edit shell config
bind = Ctrl+Super+Alt, Slash, exec, xdg-open ~/.config/hypr/custom/keybinds.conf # Edit extra keybinds

# Add stuff here
# Use #! to add an extra column on the cheatsheet
# Use ##! to add a section in that column
# Add a comment after a bind to add a description, like above
bind = Alt,bracketleft, exec, brightnessctl set 1%-
bind = Alt,bracketright, exec, brightnessctl set +1%

bind = SUPER+ALT, F4, exec,quickshell -c ii ipc call session toggle
bind = SUPER+ALT, N ,exec, ~/.config/hypr/custom/scripts/logseq.sh

bind = SUPER+ALT,G, exec, ~/.config/hypr/custom/scripts/toggle-gdrive.sh
bind = SUPER+ALT,B, exec, ~/.config/hypr/custom/scripts/toggle-syncthing.sh
bind = SUPER+ALT,D,exec,gsettings set org.gnome.desktop.interface color-scheme prefer-default
bind=SUPER,B,exec,zen-browser


bind = SUPER+ALT,I,exec, ~/.config/hypr/custom/scripts/send_file.sh

# Fullscreen screenshot
bindld = SUPER+ALT,P, Screenshot >> clipboard ,exec,grim - | wl-copy # Screenshot >> clipboard
bindld = Ctrl+ALT,P, Screenshot >> clipboard & save, exec, mkdir -p $(xdg-user-dir PICTURES)/Screenshots && grim $(xdg-user-dir PICTURES)/Screenshots/Screenshot_"$(date '+%Y-%m-%d_%H.%M.%S')".png # Screenshot >> clipboard & file


bind = SUPER+ALT,J, exec,fuzzel
bind = SUPER,G, exec, google-chrome-stable

bind = SUPER+CTRL, B, exec, bash -c 'if systemctl is-active --quiet bluetooth.service; then sudo systemctl stop bluetooth.service && notify-send "Bluetooth" "Bluetooth disabled"; else sudo systemctl start bluetooth.service && notify-send "Bluetooth" "Bluetooth enabled"; fi'


bind=SUPER,Z,exec,if hyprctl clients | grep scratch_term; then echo "scratch_term respawn not needed"; else kitty --class scratch_term; fi
bind=SUPER,Z,togglespecialworkspace,scratch_term
bind=SUPER,Y,exec,if hyprctl clients | grep scratch_yazi; then echo "scratch_yazi respawn not needed"; else kitty --class scratch_yazi -e env "YAZI_CONFIG_HOME=~/.config/yazi" yazi; fi
bind=SUPER,Y,togglespecialworkspace,scratch_yazi

bind=SUPER,L,exec,if hyprctl clients | grep Logseq; then echo "scratch_logseq respawn not needed"; else logseq-desktop; fi
bind=SUPER,L,togglespecialworkspace,scratch_logseq
bind=SUPER,M,exec,if hyprctl clients | grep betterbird; then echo "scratch_betterbird respawn not needed"; else betterbird; fi
bind=SUPER,M,togglespecialworkspace,scratch_betterbird
bind=SUPER,code:172,exec,if hyprctl clients | grep pavucontrol; then echo "scratch_pavucontrol respawn not needed"; else pavucontrol; fi
bind=SUPER,code:172,togglespecialworkspace,scratch_pavucontrol

$scratchpadsize = size 80% 85%

$scratch_term = class:^(scratch_term)$
windowrulev2 = float,$scratch_term
windowrulev2 = $scratchpadsize,$scratch_term
windowrulev2 = workspace special:scratch_term ,$scratch_term
windowrulev2 = center,$scratch_term

$float_term = class:^(float_term)$
windowrulev2 = float,$float_term
windowrulev2 = center,$float_term

$scratch_yazi = class:^(scratch_yazi)$
windowrulev2 = float,$scratch_yazi
windowrulev2 = $scratchpadsize,$scratch_yazi
windowrulev2 = workspace special:scratch_yazi silent,$scratch_yazi
windowrulev2 = center,$scratch_yazi

windowrulev2 = float,class:^(pavucontrol)$
windowrulev2 = size 60% 70%,class:^(pavucontrol)$
windowrulev2 = workspace special:scratch_pavucontrol silent,class:^(pavucontrol)$
windowrulev2 = center,class:^(pavucontrol)$

windowrulev2 = float,class:^(Logseq)$
windowrulev2 = size 85% 90%,class:^(Logseq)$
windowrulev2 = workspace special:scratch_logseq silent,class:^(Logseq)$
windowrulev2 = center,class:^(Logseq)$

windowrulev2 = float,class:^(eu.betterbird.Betterbird)$
windowrulev2 = size 85% 90%,class:^(eu.betterbird.Betterbird)$
windowrulev2 = workspace special:scratch_betterbird silent,class:^(eu.betterbird.Betterbird)$
windowrulev2 = center,class:^(eu.betterbird.Betterbird)$

